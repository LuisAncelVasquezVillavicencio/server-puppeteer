{
  "version": 4,
  "terraform_version": "1.10.5",
  "serial": 13,
  "lineage": "4c490811-fea2-b6ec-4091-f971dbd575cf",
  "outputs": {},
  "resources": [
    {
      "module": "module.dns",
      "mode": "managed",
      "type": "cloudflare_record",
      "name": "registro_a",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "allow_overwrite": true,
            "comment": "",
            "content": "35.226.22.221",
            "created_on": "2025-02-14T05:35:51.694709Z",
            "data": [],
            "hostname": "render2.portalmicanva.com",
            "id": "b55083f4db9200de9d710b15f8d334e8",
            "metadata": {},
            "modified_on": "2025-02-14T05:35:51.694709Z",
            "name": "render2",
            "priority": null,
            "proxiable": true,
            "proxied": true,
            "tags": [],
            "timeouts": null,
            "ttl": 1,
            "type": "A",
            "value": null,
            "zone_id": "5c68abc89bda3c35285c884bc97271dc"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMyJ9"
        }
      ]
    },
    {
      "module": "module.rules",
      "mode": "managed",
      "type": "cloudflare_page_rule",
      "name": "seguridad_ssl",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "actions": [
              {
                "always_use_https": false,
                "automatic_https_rewrites": "",
                "browser_cache_ttl": "",
                "browser_check": "",
                "bypass_cache_on_cookie": "",
                "cache_by_device_type": "",
                "cache_deception_armor": "",
                "cache_key_fields": [],
                "cache_level": "",
                "cache_on_cookie": "",
                "cache_ttl_by_status": [],
                "disable_apps": false,
                "disable_performance": false,
                "disable_railgun": false,
                "disable_security": false,
                "disable_zaraz": false,
                "edge_cache_ttl": 0,
                "email_obfuscation": "",
                "explicit_cache_control": "",
                "forwarding_url": [],
                "host_header_override": "",
                "ip_geolocation": "",
                "minify": [],
                "mirage": "",
                "opportunistic_encryption": "",
                "origin_error_page_pass_thru": "",
                "polish": "",
                "resolve_override": "",
                "respect_strong_etag": "",
                "response_buffering": "",
                "rocket_loader": "",
                "security_level": "",
                "server_side_exclude": "",
                "sort_query_string_for_cache": "",
                "ssl": "flexible",
                "true_client_ip_header": "",
                "waf": ""
              }
            ],
            "id": "e873def0a295a1643547f8f24fd2762c",
            "priority": 1,
            "status": "active",
            "target": "https://render2.portalmicanva.com/*",
            "zone_id": "5c68abc89bda3c35285c884bc97271dc"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.workers",
      "mode": "managed",
      "type": "cloudflare_workers_route",
      "name": "asignacion_worker_raiz",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "a16e0f1f6d194262ad861c44bafd433e",
            "pattern": "portalmicanva.com/*",
            "script_name": "bot-seo",
            "zone_id": "5c68abc89bda3c35285c884bc97271dc"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workers.cloudflare_workers_script.mi_worker"
          ]
        }
      ]
    },
    {
      "module": "module.workers",
      "mode": "managed",
      "type": "cloudflare_workers_route",
      "name": "asignacion_worker_subdominios",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "d104c99d52c74c0aae325dd8ea37d7a5",
            "pattern": "*.portalmicanva.com/*",
            "script_name": "bot-seo",
            "zone_id": "5c68abc89bda3c35285c884bc97271dc"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.workers.cloudflare_workers_script.mi_worker"
          ]
        }
      ]
    },
    {
      "module": "module.workers",
      "mode": "managed",
      "type": "cloudflare_workers_script",
      "name": "mi_worker",
      "provider": "provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "0efcdb2ae1e94ae93ea0155f1e622df2",
            "analytics_engine_binding": [],
            "compatibility_date": null,
            "compatibility_flags": [],
            "content": "addEventListener(\"fetch\", event =\u003e {\n  event.respondWith(handleRequest(event));\n});\n\nasync function handleRequest(event) {\n  const { request } = event;\n\n  try {\n    // Definir directamente la URL del servidor de renderizado\n    const RENDER_SERVER = \"https://render.portalmicanva.com/\";\n\n    console.log(`Usando RENDER_SERVER: ${RENDER_SERVER}`);\n\n    const url = new URL(request.url);\n    let userAgent = request.headers.get(\"user-agent\") || \"\";\n\n    // Convertir User-Agent a minúsculas\n    const lowerUserAgent = userAgent.toLowerCase();\n\n    // Verificar si el User-Agent es un bot\n    const isBot = BOT_AGENTS.some(bot =\u003e lowerUserAgent.includes(bot.toLowerCase()));\n\n    console.log(`Request URL: ${url.href}`);\n    console.log(`User-Agent: ${userAgent}`);\n    console.log(`Is Bot: ${isBot}`);\n\n    // Verificar si la solicitud es para un recurso ignorado basado en la extensión\n    const pathname = url.pathname;\n    const hasIgnoredExtension = IGNORE_EXTENSIONS.some(ext =\u003e pathname.toLowerCase().endsWith(ext));\n\n    if (hasIgnoredExtension) {\n      console.log(`La ruta ${pathname} tiene una extensión ignorada. Devolviendo contenido original.`);\n      return fetch(request);\n    }\n\n    // Si esta petición ya viene del Puppeteer server (con ?botRender=true), devolver contenido original\n    const isRenderCall = url.searchParams.get(\"botRender\") === \"true\";\n    if (isRenderCall) {\n      console.log(\"Llamada desde Puppeteer (botRender=true). Devolviendo contenido sin cambios.\");\n      return fetch(request);\n    }\n\n    // Verificar si la ruta debe ser ignorada\n    const shouldIgnore = ignoredPaths.some(path =\u003e url.pathname.startsWith(path));\n    if (shouldIgnore) {\n      console.log(`La ruta ${url.pathname} está en la lista de ignorados. Devolviendo contenido original.`);\n      return fetch(request);\n    }\n\n    if (isBot) {\n      // Si la ruta ya es /producto-share/, devolvemos el contenido sin cambios\n      if (url.pathname.startsWith(\"/producto-share\")) {\n        console.log(\"Ruta /producto-share/ detectada en modo bot. Devolviendo contenido sin redirecciones.\");\n        return fetch(request);\n      }\n\n      // Si es bot y la ruta inicia con /producto/, la cambiamos a /producto-share/\n      if (url.pathname.startsWith(\"/producto/\")) {\n        const oldPath = url.pathname;\n        url.pathname = url.pathname.replace(\"/producto/\", \"/producto-share/\");\n        console.log(`Ruta modificada para SEO: de ${oldPath} a ${url.pathname}`);\n      } else {\n        console.log(\"Es bot, pero la ruta no inicia con /producto/. Se devolverá contenido bot render.\");\n      }\n\n      // Llamada al Puppeteer server con el parámetro botRender=true para evitar bucles\n      const puppeteerServerUrl = `${RENDER_SERVER}/render?url=${encodeURIComponent(url.toString())}\u0026botRender=true`;\n      console.log(`Llamando a Puppeteer Server: ${puppeteerServerUrl}`);\n\n      try {\n        const response = await fetch(puppeteerServerUrl);\n        if (!response.ok) {\n          console.error(`Error al renderizar la página: ${response.statusText}`);\n          return new Response(\"Error al renderizar la página.\", { status: 500 });\n        }\n\n        const html = await response.text();\n        return new Response(html, { headers: { \"Content-Type\": \"text/html\" } });\n      } catch (error) {\n        console.error(`Error en la solicitud al renderizador: ${error}`);\n        return new Response(\"Error interno.\", { status: 500 });\n      }\n    }\n\n    return fetch(request);\n  } catch (error) {\n    console.error(`Error en el Worker: ${error}`);\n    return new Response(\"Error en el Worker.\", { status: 500 });\n  }\n}\n\n// ✅ Listas de Bots y Extensiones Ignoradas\nconst ignoredPaths = [];\n\nconst BOT_AGENTS = [\n  \"googlebot\", \"yahoo! slurp\", \"bingbot\", \"yandex\", \"baiduspider\",\n  \"facebookexternalhit\", \"twitterbot\", \"rogerbot\", \"linkedinbot\",\n  \"embedly\", \"quora link preview\", \"showyoubot\", \"outbrain\", \"pinterest/0.\",\n  \"developers.google.com/+/web/snippet\", \"slackbot\", \"vkshare\", \"w3c_validator\",\n  \"redditbot\", \"applebot\", \"whatsapp\", \"flipboard\", \"tumblr\", \"bitlybot\",\n  \"skypeuripreview\", \"nuzzel\", \"discordbot\", \"google page speed\", \"qwantify\",\n  \"pinterestbot\", \"bitrix link preview\", \"xing-contenttabreceiver\", \"chrome-lighthouse\",\n  \"telegrambot\", \"integration-test\", \"google-inspectiontool\"\n];\n\nconst IGNORE_EXTENSIONS = [\n  \".js\", \".css\", \".xml\", \".less\", \".png\", \".jpg\", \".jpeg\", \".gif\",\n  \".pdf\", \".doc\", \".txt\", \".ico\", \".rss\", \".zip\", \".mp3\", \".rar\",\n  \".exe\", \".wmv\", \".avi\", \".ppt\", \".mpg\", \".mpeg\", \".tif\", \".wav\",\n  \".mov\", \".psd\", \".ai\", \".xls\", \".mp4\", \".m4a\", \".swf\", \".dat\",\n  \".dmg\", \".iso\", \".flv\", \".m4v\", \".torrent\", \".woff\", \".ttf\", \".svg\", \".webmanifest\"\n];\n",
            "d1_database_binding": [],
            "dispatch_namespace": null,
            "hyperdrive_config_binding": [],
            "id": "bot-seo",
            "kv_namespace_binding": [],
            "logpush": null,
            "module": null,
            "name": "bot-seo",
            "placement": [],
            "plain_text_binding": [],
            "queue_binding": [],
            "r2_bucket_binding": [],
            "secret_text_binding": [],
            "service_binding": [],
            "tags": [],
            "webassembly_binding": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
